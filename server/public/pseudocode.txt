if player 1 were to click on top left, and top left is not occupied with X or O
then put an X


import React from 'react';
import parseRoute from './lib/parse-route';
// import Home from './pages/home';

export default class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      board: [
        {a1: 0, a2: 0, a3: 0},
        {b1: 0, b2: 0, b3: 0},
        {c1: 0, c2: 0, c3: 0}
      ],
      winner: null,
      isAuthorizing: window.localStorage.getItem('tic-tac-destroy') === null,
      route: parseRoute(window.location.hash)
    };
    this.handleClick = this.handleClick.bind(this);
  }

  componentDidMount() {

  }

  renderPage() {

  }

  handleClick() {

  }

  render() {
    const board = this.state.board;
    if (board[0].a1) {
      if (board[0].a1 === board[0].a2 && board[0].a1 === board[0].a3) {console.log(`winner is ${board[0].a1}`)}
      if (board[0].a1 === board[1].b2 && board[0].a1 === board[2].c3) {console.log(`winner is ${board[0].a1}`)}
      if (board[0].a1 === board[1].b1 && board[0].a1 === board[2].c1) {console.log(`winner is ${board[0].a1}`)}
    }
    if (board[0].a3) {
      if(board[0].a3 === board[1].b2 && board[0].a3 === board[2].c1) {console.log(`winner is ${board[0].a3}`)}
      if(board[0].a3 === board[1].b3 && board[0].a3 === board[2].c3) {console.log(`winner is ${board[0].a3}`)}
    }
    if (board[0].a2 && board[0].a2 === board[1].b2 && board[0].a2 === board[2].c2) {console.log(`winner is ${board[0].a2}`)}
    if (board[1].b1 && board[1].b1 === board[1].b2 && board[1].b1 === board[1].b3) {console.log(`winner is ${board[1].b1}`)}
    if (board[2].c1 && board[2].c1 === board[2].c2 && board[2].c1 === board[2].c3) {console.log(`winner is ${board[2].c1}`)}
    return (
      <>
        <div>{this.renderPage(this.state.route)}</div>
      </>
    );
  }
}
